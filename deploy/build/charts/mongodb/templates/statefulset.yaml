apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.service.name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mongodb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostname: {{ include "mongodb.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: 27017
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - bash
                - "-c"
                - |
                  mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval db.adminCommand\(\"ping\"\)
            initialDelaySeconds: 20
            failureThreshold: 6
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - bash
                - "-c"
                - |
                  cat /init_result | grep ok | grep 1 || mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval rs.initiate\(\) > /init_result
                  cat /conf_result | grep ok | grep 1 || mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval conf=rs.conf\(\)\;conf.members[0].host=\"{{ .Values.service.name }}.{{ .Release.Namespace }}.svc.cluster.local:27017\"\;rs.reconfig\(conf\) > /conf_result
                  mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval db.adminCommand\(\"ping\"\)
            initialDelaySeconds: 20
            failureThreshold: 6
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: 
            - bash
            - -c
            - |
              cp /keyfile /data/replica.key
              chmod 400 /data/replica.key
              chown 999:999 /data/replica.key
              exec docker-entrypoint.sh $$@
          args: ["mongod", "--bind_ip", "0.0.0.0,{{ .Values.service.name }}.{{ .Release.Namespace }}.svc.cluster.local", "--replSet", "{{ .Values.db.replicaSetName }}", "--keyFile", "/data/replica.key"]
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-init
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-init
                  key: password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-init
                  key: database
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-key-file
              mountPath: /keyfile
              subPath: keyFile
      volumes:
        - name: mongodb-key-file
          secret:
            secretName: {{ .Release.Name }}-{{ .Chart.Name }}-init
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-db-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
